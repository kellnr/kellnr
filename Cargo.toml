[workspace]
exclude = ["crates/test_data"]
members = ["crates/*", "crates/db/entity", "crates/db/migration"]
default-members = ["crates/kellnr"]
resolver = "2"

[workspace.package]
authors = ["kellnr.io"]
edition = "2024"
version = "0.1.0"
license-file = "LICENSE"

[workspace.dependencies]
# Internal dependencies from Kellnr
common = { path = "./crates/common" }
db = { path = "./crates/db" }
entity = { path = "./crates/db/entity" }
migration = { path = "./crates/db/migration" }
docs = { path = "./crates/docs" }
index = { path = "./crates/index" }
settings = { path = "./crates/settings" }
web_ui = { path = "./crates/web_ui" }
registry = { path = "./crates/registry" }
db_testcontainer = { path = "./crates/db/db_testcontainer" }
auth = { path = "./crates/auth" }
error = { path = "./crates/error" }
appstate = { path = "./crates/appstate" }
storage = { path = "./crates/storage" }
minio_testcontainer = { path = "./crates/storage/minio_testcontainer" }

# External dependencies from crates.io
jsonwebtoken = "9.3.1"
reqwest = {version = "0.12.19", features = ["json", "blocking", "gzip", "http2", "deflate"]}
serde = {version = "1.0.219", features = ["derive"]}
sysinfo = "0.35.1"
semver = "1.0.26"
regex = "1.11.1"
serde_json = "1.0.140"
mockall = "0.13.1"
rand = "0.9.1"
chrono = "0.4.41"
thiserror = "2.0.12"
sea-orm = { version = "1.1.12", features = [ "sqlx-postgres", "sqlx-sqlite", "runtime-tokio-rustls", "macros" ] }
sea-query = "0.32.6"
sea-query-derive = "0.4.3"
sea-orm-migration = { version = "1.1.12", features = [ "sqlx-postgres", "sqlx-sqlite", "runtime-tokio-rustls" ] }
rm_rf = "0.6.2"
testcontainers = "0.24.0"
quote = "1.0.40"
syn = {version = "2.0.101", features = ["full"]}
trybuild = {version = "1.0.105", features = ["diff"]}
zip = "4.0.0"
flate2 = "1.1.2"
tar = "0.4.44"
cargo = "0.86.0"
fs_extra = "1.3.0"
wax = "0.6.0"
proc-macro2 = "1.0.95"
moka = {version = "0.12.10", features = ["future"]}
config = "0.15.11"
toml = "0.8.23"
time = "0.3.41"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["json", "fmt"] }
flume = "0.11.1"
axum = { version = "0.8.4", features = ["macros", "http2"] }
axum-extra = { version = "0.10.1", features = ["cookie", "cookie-private", "typed-header"] }
tokio = { version = "1.45.1", features = ["macros"] }
tower = { version = "0.5.2", features = ["util"] }
hyper = "1.6.0"
tower-http = { version = "0.6.6", features = ["fs", "trace"] }
cookie = { version = "0.18.1", features = ["private", "percent-encode"] }
url = "2.5.4"
http-body-util = "0.1.3"
sha256 = "1.6.0"
object_store = { version = "0.12.1", features = ["aws"] }
bytes = "1.10.0"
async-trait = "0.1.88"

[profile.release]
lto = "thin"
strip = true

[workspace.lints.rust]
unsafe_code = "forbid"
unused_qualifications = "warn"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
# This list of warnings with their counts was generated by running
#  `cargo clippy --all-targets --workspace --all-features --message-format=json --quiet | jq -r '.message.code.code | select(. != null and startswith("clippy::"))' | sort | uniq -c | sort -h -r`
# Most likely some of should be permanently allowed, but they at least should be reviewed.
used_underscore_binding = "allow" # 672
missing_errors_doc = "allow" # 182
must_use_candidate = "allow" # 74
default_trait_access = "allow" # 45
cast_possible_truncation = "allow" # 28
cast_sign_loss = "allow" # 20
unused_async = "allow" # 16
single_match_else = "allow" # 12
semicolon_if_nothing_returned = "allow" # 11
missing_panics_doc = "allow" # 10
cast_possible_wrap = "allow" # 10
if_not_else = "allow" # 8
wildcard_imports = "allow" # 7
too_many_lines = "allow" # 6
explicit_iter_loop = "allow" # 6
cast_lossless = "allow" # 6
unreadable_literal = "allow" # 4
unnecessary_semicolon = "allow" # 4
manual_let_else = "allow" # 4
doc_markdown = "allow" # 4
unnecessary_wraps = "allow" # 2
trivially_copy_pass_by_ref = "allow" # 2
struct_field_names = "allow" # 2
similar_names = "allow" # 2
ref_option = "allow" # 2
needless_pass_by_value = "allow" # 2
match_bool = "allow" # 2
map_unwrap_or = "allow" # 2
items_after_statements = "allow" # 2
ignored_unit_patterns = "allow" # 2
