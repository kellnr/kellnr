[workspace]
exclude = ["crates/test_data"]
members = ["crates/*", "crates/db/entity", "crates/db/migration"]
default-members = ["crates/kellnr"]
resolver = "2"

[workspace.package]
authors = ["kellnr.io"]
edition = "2024"
version = "0.1.0"
license-file = "LICENSE"

[workspace.dependencies]
# Internal dependencies from Kellnr
appstate = { path = "./crates/appstate" }
auth = { path = "./crates/auth" }
common = { path = "./crates/common" }
db = { path = "./crates/db" }
db_testcontainer = { path = "./crates/db/db_testcontainer" }
docs = { path = "./crates/docs" }
entity = { path = "./crates/db/entity" }
error = { path = "./crates/error" }
index = { path = "./crates/index" }
migration = { path = "./crates/db/migration" }
minio_testcontainer = { path = "./crates/storage/minio_testcontainer" }
registry = { path = "./crates/registry" }
settings = { path = "./crates/settings" }
storage = { path = "./crates/storage" }
web_ui = { path = "./crates/web_ui" }

# External dependencies from crates.io
async-trait = "0.1.89"
axum = { version = "0.8.4", features = ["macros", "http2"] }
axum-extra = { version = "0.10.1", features = ["cookie", "cookie-private", "typed-header"] }
base64 = "0.22.1"
bytes = "1.10.0"
cargo = "0.86.0"
chrono = "0.4.41"
config = "0.15.13"
cookie = { version = "0.18.1", features = ["private", "percent-encode"] }
flate2 = "1.1.2"
flume = "0.11.1"
fs_extra = "1.3.0"
http-body-util = "0.1.3"
hyper = "1.7.0"
mockall = "0.13.1"
moka = { version = "0.12.10", features = ["future"] }
object_store = { version = "0.12.3", features = ["aws"] }
quote = "1.0.40"
rand = "0.9.2"
regex = "1.11.2"
reqwest = { version = "0.12.23", features = ["json", "blocking", "gzip", "http2", "deflate"] }
rm_rf = "0.6.2"
sea-orm = { version = "1.1.14", features = ["sqlx-postgres", "sqlx-sqlite", "runtime-tokio-rustls", "macros"] }
sea-orm-migration = { version = "1.1.14", features = ["sqlx-postgres", "sqlx-sqlite", "runtime-tokio-rustls"] }
sea-query = "0.32.7"
semver = "1.0.26"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.143"
sha256 = "1.6.0"
syn = { version = "2.0.106", features = ["full"] }
tar = "0.4.44"
testcontainers = "0.25.0"
thiserror = "2.0.16"
time = "0.3.41"
tokio = { version = "1.47.1", features = ["macros"] }
toml = "0.9.5"
tower = { version = "0.5.2", features = ["util"] }
tower-http = { version = "0.6.6", features = ["fs", "trace"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["json", "fmt"] }
url = "2.5.4"
zip = "4.5.0"

[profile.release]
lto = "thin"
strip = true

[workspace.lints.rust]
unsafe_code = "forbid"
unused_qualifications = "warn"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
# Decided lints to be kept disabled for now
cast_lossless = "allow"
missing_errors_doc = "allow"
must_use_candidate = "allow"
used_underscore_binding = "allow"
# This list of warnings with their counts was generated by running
#  `cargo clippy --all-targets --workspace --all-features --message-format=json --quiet | jq -r '.message.code.code | select(. != null and startswith("clippy::"))' | sort | uniq -c | sort -h -r`
# Most likely some of should be permanently allowed, but they at least should be reviewed.
cast_possible_truncation = "allow" # 28
cast_sign_loss = "allow" # 20
missing_panics_doc = "allow" # 10
cast_possible_wrap = "allow" # 10
if_not_else = "allow" # 8
too_many_lines = "allow" # 6
